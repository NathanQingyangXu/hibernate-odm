package org.hibernate.odm.jdbc

import com.mongodb.client.MongoClient
import java.sql.Blob
import java.sql.CallableStatement
import java.sql.Clob
import java.sql.DatabaseMetaData
import java.sql.NClob
import java.sql.PreparedStatement
import java.sql.SQLFeatureNotSupportedException
import java.sql.SQLXML
import java.sql.Statement
import java.sql.Struct

internal class MongoConnection(client: MongoClient) : AbstractCloseable(), ConnectionAdapter {
  private val clientSession = client.startSession()

  override fun closeActually() {
    clientSession.close()
  }

  override fun createStatement(): Statement {
    TODO()
  }

  override fun prepareStatement(sql: String): PreparedStatement {
    TODO()
  }

  override fun prepareCall(sql: String): CallableStatement {
    throw SQLFeatureNotSupportedException("MongoDB has no SQL stored procedure counterpart")
  }

  override fun setAutoCommit(autoCommit: Boolean) {
    TODO()
  }

  override fun getAutoCommit(): Boolean {
    TODO()
  }

  override fun commit() {
    TODO()
  }

  override fun rollback() {
    TODO()
  }

  override fun getMetaData(): DatabaseMetaData {
    TODO()
  }

  override fun setTransactionIsolation(level: Int) {
    throw SQLFeatureNotSupportedException(
        "MongoDB has no SQL transaction isolation level counterpart")
  }

  override fun getTransactionIsolation(): Int {
    throw SQLFeatureNotSupportedException(
        "MongoDB has no SQL transaction isolation level counterpart")
  }

  override fun getWarnings() = null

  override fun clearWarnings() {
    // no-op
  }

  override fun prepareStatement(
      sql: String,
      resultSetType: Int,
      resultSetConcurrency: Int
  ): PreparedStatement {
    TODO()
  }

  override fun prepareCall(
      sql: String,
      resultSetType: Int,
      resultSetConcurrency: Int
  ): CallableStatement {
    throw SQLFeatureNotSupportedException("MongoDB has no SQL stored procedure counterpart")
  }

  override fun prepareStatement(sql: String, autoGeneratedKeys: Int): PreparedStatement {
    TODO()
  }

  override fun prepareStatement(sql: String, columnNames: Array<out String>): PreparedStatement {
    TODO()
  }

  override fun createClob(): Clob {
    TODO()
  }

  override fun createBlob(): Blob {
    TODO()
  }

  override fun createNClob(): NClob {
    TODO()
  }

  override fun createSQLXML(): SQLXML {
    TODO()
  }

  override fun createArrayOf(typeName: String, elements: Array<out Any>): java.sql.Array {
    TODO()
  }

  override fun createStruct(typeName: String, attributes: Array<out Any>): Struct {
    TODO()
  }
}
